/**
 * 
 */
package lpbcast.utils;

/**
 * @author Marco Zanetti
 *
 */
public class ProcessMetrics 
{
	
	private short eventsSize;
	private int eventIdsSize;
	private short unSubsSize, subsSize, viewSize;
	private short fanout;
	private short eventPerRound;
	private short currentEvents;
	private short currentRound;
	
	
	/**
	 * @param eventsSize the max size for events
	 * @param eventIdsSize the max size for event ids
	 * @param unSubsSize the max size for unsubscriptions
	 * @param subsSize the max size for subscriptions
	 * @param viewSize the max size of neighbours
	 * @param fanout the number of process to contact for every gossip
	 * @param eventPerRound the number of events generated by a process per round
	 */
	public ProcessMetrics(short eventsSize,
			int eventIdsSize, 
			short unSubsSize, 
			short subsSize, 
			short viewSize,
			short fanout,
			short eventPerRound)
	{
		this.eventIdsSize = eventIdsSize;
		this.eventsSize = eventsSize;
		this.unSubsSize = unSubsSize;
		this.subsSize = subsSize;
		this.viewSize = viewSize;
		this.fanout = fanout;
		this.eventPerRound = eventPerRound;
		this.currentEvents = 0;
		this.currentRound = 1;
	}


	public short getEventsSize() 
	{
		return eventsSize;
	}


	public void setEventsSize(short eventsSize) 
	{
		this.eventsSize = eventsSize;
	}


	public int getEventIdsSize() 
	{
		return eventIdsSize;
	}


	public void setEventIdsSize(int eventIdsSize) 
	{
		this.eventIdsSize = eventIdsSize;
	}


	public short getUnSubsSize() 
	{
		return unSubsSize;
	}


	public void setUnSubsSize(short unSubsSize) 
	{
		this.unSubsSize = unSubsSize;
	}


	public short getSubsSize() 
	{
		return subsSize;
	}


	public void setSubsSize(short subsSize) 
	{
		this.subsSize = subsSize;
	}


	public short getViewSize() 
	{
		return viewSize;
	}


	public void setViewSize(short viewSize) 
	{
		this.viewSize = viewSize;
	}


	public short getFanout() 
	{
		return fanout;
	}


	public void setFanout(short fanout) 
	{
		this.fanout = fanout;
	}
	
	public void setEventPerRound(short eventPerRound) 
	{
		this.eventPerRound = eventPerRound;
	}
	
	public short getEventPerRound() 
	{
		return eventPerRound;
	}


	/**
	 * @return the currentEvents
	 */
	public synchronized short getCurrentEvents() 
	{
		return currentEvents;
	}


	/**
	 * @param currentEvents the currentEvents to set
	 */
	public synchronized void setCurrentEvents(short currentEvents) 
	{
		this.currentEvents = currentEvents;
	}


	/**
	 * @return the currentRound
	 */
	public synchronized short getCurrentRound() 
	{
		return currentRound;
	}


	/**
	 * @param currentRound the currentRound to set
	 */
	public synchronized void setCurrentRound(short currentRound) 
	{
		this.currentRound = currentRound;
	}
	
	/**
	 * increment currentEvents
	 */
	public synchronized void incCurrentEvents() 
	{
		this.currentEvents++;
	}

	/**
	 * increment currentRound
	 */
	public synchronized void incCurrentRound() 
	{
		this.currentRound++;
	}
}
